classify_requirements:
  description: >
    Review the extracted requirements and classify each one according to IEEE 830 
    standards. Categorize requirements as Functional (what the system should do), 
    Non-Functional (how the system should perform), or Out-of-Scope (items that 
    fall outside the current project boundaries). Provide clear justification 
    for each classification decision.
  expected_output: >
    A structured list of all requirements with clear classification tags 
    (Functional, Non-Functional, Out-of-Scope). Each requirement should include 
    its category label and a brief rationale for the classification decision.
  agent: classifier

extract_requirements:
  description: >
    Analyze the provided unstructured text input and extract all potential 
    requirement statements. Identify actionable items, system behaviors, 
    constraints, and specifications while filtering out background information, 
    context, and non-requirement content. Transform informal language into 
    clear, structured requirement statements that can be further processed.
  expected_output: >
    A comprehensive list of extracted requirement statements, each clearly 
    articulated and actionable. Each requirement should be presented as a 
    separate item with sufficient detail for classification and implementation 
    planning.
  agent: requirement_extractor

validate_consistency:
  description: >
    Perform comprehensive quality assurance review of the SRS document to 
    identify potential issues including duplicate requirements, conflicting 
    statements, ambiguous language, missing information, and internal 
    inconsistencies. Flag areas that need clarification or revision to ensure 
    the specification is coherent and complete.
  expected_output: >
    A detailed validation report highlighting any identified issues, 
    inconsistencies, or gaps in the SRS document. Include specific recommendations 
    for resolving flagged issues and an overall assessment of document quality 
    and completeness.
  agent: consistency_checker

write_srs_document:
  description: >
    Create a comprehensive Software Requirements Specification document using 
    the classified requirements. Structure the document according to IEEE 830 
    standards with sections including Introduction, Overall Description, 
    Functional Requirements, Non-Functional Requirements, and Constraints. 
    Ensure professional formatting, clear organization, and stakeholder-friendly 
    language while maintaining technical accuracy.
  expected_output: >
    A complete, well-structured SRS document in {output_format} format that 
    follows IEEE 830 standards. The document should be professionally formatted, 
    logically organized, and ready for stakeholder review and development team 
    implementation.
  agent: srs_writer